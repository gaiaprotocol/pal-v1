/*!***********************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../common-style/lib/reset.css ***!
  \***********************************************************************************************************/
/***
    The new CSS reset - version 1.8.4 (last updated 14.2.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
 *:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-inline-size: 100%;
    max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
    all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
    content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
    all: revert;
}
/*!*********************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/less-loader/dist/cjs.js!./public/style/main.less ***!
  \*********************************************************************************************************************************************/
html,
body {
  background-color: #121212;
  color: #e1e1e1;
  height: 100%;
}
.layout {
  padding-top: 60px;
  padding-left: 80px;
  height: 100%;
}
@media only screen and (max-width: 859px) {
  .layout {
    padding-left: 0;
    padding-bottom: 80px;
  }
}
.layout > header {
  position: fixed;
  left: 0;
  top: 0;
  background-color: #530087;
  width: 100%;
  height: 60px;
  display: flex;
  align-items: center;
  padding: 0 24px;
}
.layout > header > .logo {
  cursor: pointer;
}
.layout > header > .logo > img {
  height: 32px;
  display: block;
}
.layout > main {
  height: 100%;
}
.layout > nav {
  position: fixed;
  display: flex;
  left: 0;
  top: 60px;
  flex-direction: column;
  background-color: #1f1f1f;
  width: 80px;
  height: calc(100% - 60px);
  padding: 12px 0;
}
@media only screen and (max-width: 859px) {
  .layout > nav {
    top: auto;
    bottom: 0;
    flex-direction: row;
    width: 100%;
    height: 80px;
    padding: 0;
    justify-content: center;
  }
}
.layout > nav > a {
  width: 80px;
  height: 80px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  gap: 8px;
  color: #7f7f7f;
}
.layout > nav > a > .icon {
  font-size: 30px;
}
.layout > nav > a:hover {
  color: #e1e1e1;
}
.layout > nav > a.active {
  color: #fff;
}
.rooms-view {
  height: 100%;
}
.rooms-view > .room-list {
  width: 360px;
  height: 100%;
  border-right: 1px solid #1e1e1e;
}
@media only screen and (max-width: 859px) {
  .rooms-view > .room-list {
    width: 100%;
    height: auto;
    border: none;
  }
}
.chat-room-view {
  position: fixed;
  left: 440px;
  top: 60px;
  width: calc(100% - 440px);
  height: calc(100% - 60px);
  padding-top: 60px;
  background-color: #121212;
}
@media only screen and (max-width: 859px) {
  .chat-room-view {
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
  }
}
.chat-room-view > header {
  position: absolute;
  left: 0;
  top: 0;
  background-color: #1f1f1f;
  width: 100%;
  height: 60px;
  display: flex;
  align-items: center;
  padding: 0 24px;
}
@media only screen and (max-width: 859px) {
  .chat-room-view > header {
    background-color: #530087;
  }
}

